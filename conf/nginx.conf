daemon off;
events {
  worker_connections 1024;
}
http {
  lua_package_path '/tmp/kew/?.lua;;';
  server {
    lua_check_client_abort on;
    listen 8443;
    resolver 172.22.0.2;

    set $queuemethod 'fanout';
    #set $queuemethod 'stream';

    location /createsession {
      content_by_lua_block {
        local createsession
        createsession = require("createsession")
        local restyredis = require("resty.redis")
        local redis = restyredis.new()
        local get, post, files = require "resty.reqargs"()
        redis:connect("nodesydney.wiftycloud.com", 6379)
        redis:auth("7884b8baaa49fbcb48f17ad2a145")
        createsession(redis, post)
      }
    }

    location /postmessage {
      content_by_lua_block {
        local postmessage
        if ngx.var.queuemethod == "fanout" then
          postmessage = require("postmessage")
        else
          postmessage = require("poststream")
        end
        local restyredis = require("resty.redis")
        local redis = restyredis.new()
        local get, post, files = require "resty.reqargs"()
        redis:connect("nodesydney.wiftycloud.com", 6379)
        redis:auth("7884b8baaa49fbcb48f17ad2a145")
        postmessage(redis, post)
      }
    }

    location /getmessage {
      content_by_lua_block {
        local getmessage
        if ngx.var.queuemethod == "fanout" then
          getmessage = require("getmessage")
        else
          getmessage = require("getstream")
        end
        local restyredis = require("resty.redis")
        local redis = restyredis.new()
        local get, post, files = require "resty.reqargs"()
        local ok, err = redis:connect("nodesydney.wiftycloud.com", 6379)
        if not ok then ngx.log(ngx.ERR, err) end
        ok, err = redis:auth("7884b8baaa49fbcb48f17ad2a145")
        if not ok then ngx.log(ngx.ERR, err) end
        getmessage(redis, post)
      }
    }

    location /getstate {
      content_by_lua_block {
        local getstate
        if ngx.var.queuemethod == "fanout" then
          getstate = require("getstate")
        else
          getstate = require("dumpstream")
        end
        local restyredis = require("resty.redis")
        local redis = restyredis.new()
        local get, post, files = require "resty.reqargs"()
        redis:connect("nodesydney.wiftycloud.com", 6379)
        redis:auth("7884b8baaa49fbcb48f17ad2a145")
        getstate(redis, post)
      }
    }

    location /container {
      content_by_lua_block {
        local container = require("container")
        container()
      }
    }

    location /audience {
      content_by_lua_block {
        local audience = require("audience")
        audience()
      }
    }

    location /producer {
      content_by_lua_block {
        local producer = require("producer")
        producer()
      }
    }

    location /fun {
      content_by_lua_block {
        local fun = require("fun")
        fun()
      }
    }
		
	  location /rough.min.js {
		  root /tmp/kew/site;
		}
  }
}
